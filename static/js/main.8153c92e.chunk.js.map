{"version":3,"sources":["components/Header.js","components/Movie.js","components/MovieStructure.js","asset/img/image-not-available.jpg","components/Body.js","App.js","index.js"],"names":["Header","props","useState","searchMove","setSearchMovie","className","href","src","alt","border","onSubmit","e","preventDefault","window","location","hash","console","log","id","type","placeholder","onChange","target","value","Movie","dataToggled","setDataToggled","myLocalStorage","localStorage","useEffect","getItem","split","indexOf","toString","title","rating","plot","onClick","listId","idSplit","splice","setItem","join","data-toggled","MovieStructure","children","Body","replace","setHash","movies","setMovies","baseUrl","setBaseUrl","posterSize","setPosterSize","fetch","then","res","json","images","base_url","poster_sizes","results","addEventListener","map","el","poster_path","noneImage","vote_average","overview","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.8153c92e.chunk.js","sourcesContent":["/** Main imports */\nimport React, { useState } from \"react\"\n\n/** Component that is responsible for structuring and controlling the Header of the application */\nfunction Header(props) {\n  const [ searchMove, setSearchMovie ] = useState(\"\")\n\n  /** handleChange takes care of the form control, determines the value of the search bar status */\n  function handleChange(e) {\n    setSearchMovie(e.target.value)\n  }\n  \n  /** handleSubmit is in charge of controlling the form processing and painting the data in the url */\n  function handleSubmit(e) {\n    e.preventDefault()\n    window.location.hash = searchMove\n    setSearchMovie(\"\")\n    console.log(searchMove)\n  }\n\n  return(\n    <header className=\"header\">\n      <a href=\"/\">\n        <img \n          src=\"https://fontmeme.com/permalink/190707/fd4735271a0d997cbe19a04408c896fc.png\"\n          alt=\"netflix-font\"\n          border=\"0\"\n        />\n      </a>\n      <form onSubmit={handleSubmit} id=\"search\"  className=\"search\">\n          <input type=\"search\" placeholder=\"Search for a title...\" onChange={handleChange} value={searchMove} />\n      </form>\n    </header>\n  )\n}\n\nexport default Header","/** Main imports */\nimport React, { useEffect, useState } from \"react\";\n\n/** The Movie component is in charge of formatting the movie cards in addition to controlling their status */\nfunction Movie(props) {\n  const [ dataToggled, setDataToggled ] = useState(\"false\") // The state that is in charge of controlling if the heart button was pressed.\n\n  let myLocalStorage = window.localStorage\n\n  /** changeDataToggled is in charge of controlling the event that is generated when pressing the heart button */\n  function changeDataToggled() {\n    let listId = myLocalStorage.getItem(\"movieLike\") // LocalStorage is used to store a variable that allows us to recognize which movie was selected\n\n    if(dataToggled === \"true\"){\n      let idSplit = listId.split(\",\")\n      setDataToggled(\"false\")\n      idSplit.splice(idSplit.indexOf(`${props.id}`), 1)\n      myLocalStorage.setItem(\"movieLike\", idSplit.join())\n    } else{\n      setDataToggled(\"true\")\n      myLocalStorage.setItem(\"movieLike\", `${listId},${props.id}`)\n    }\n  }\n\n  /** The useEffect determines the life cycle of the component */\n  useEffect(() => {\n    let listId = myLocalStorage.getItem(\"movieLike\").split(\",\")\n\n    if(listId.indexOf(props.id.toString()) !== -1){\n      setDataToggled(\"true\")\n    }\n  }, [myLocalStorage, props.id])\n\n  return (\n    <div className=\"movie\">\n      <img\n        src={props.src}\n        alt=\"Movie poster\"\n      />\n      <div className=\"overlay\">\n        <div className=\"title\">{props.title}</div>\n        <div className=\"rating\">{props.rating}/10</div>\n        <div className=\"plot\">\n          {props.plot}\n        </div>\n        <div onClick={changeDataToggled} data-toggled={dataToggled} className=\"listToggle\">\n          <div>\n            <i className=\"far fa-heart\"></i>\n            <i className=\"fas fa-heart\"></i>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default Movie;\n","/** Main imports */\nimport React from \"react\";\n\n/** The MovieStructure component is responsible for containing the Movie components within the Body component */\nfunction MovieStructure(props) {\n  return (\n    <div className=\"titleList\">\n      <div className=\"title\">\n        <h1>Movies</h1>\n        <div className=\"titles-wrapper\">\n          {props.children} \n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default MovieStructure;\n","export default __webpack_public_path__ + \"static/media/image-not-available.e3b4fb04.jpg\";","/** Main import */\nimport React, { useEffect, useState } from \"react\";\n/** My components import */\nimport Movie from \"./Movie\";\nimport MovieStructure from \"./MovieStructure\";\n/** Image import */\nimport noneImage from \"../asset/img/image-not-available.jpg\";\n\n/** This Body component is the one that contains the logic that brings the series from the TMDB API */\nfunction Body(props) {\n  const [hash, setHash] = useState(\n    window.location.hash\n      ? window.location.hash.replace(/#/g, \"\")\n      : \"jaldsfjoasidfjasiofjoasijfwweffuhniufh\"\n  ); // In the state the API data is controlled to be served in the interface / The set of random letters ensures that an error is not generated in the request to the API and that it returns an empty array when no search data is passed in the url.\n  const [movies, setMovies] = useState([]);\n  const [baseUrl, setBaseUrl] = useState(\"\");\n  const [posterSize, setPosterSize] = useState(\"\");\n\n  /** In the useEffect, the fetch request is generated to request the data from the API */\n  useEffect(() => {\n    fetch(\n      `https://api.themoviedb.org/3/configuration?api_key=3051f0de96eabec45d522747f8508bdb`\n    ) // In the url of fetch 'key' is a unique key that TMDB gives us when creating an account on your website.\n      .then((res) => res.json())\n      .then((res) => {\n        setBaseUrl(res.images.base_url);\n        setPosterSize(res.images.poster_sizes[3]);\n      })\n      .then((res) => {\n        fetch(\n          `https://api.themoviedb.org/3/search/movie?api_key=3051f0de96eabec45d522747f8508bdb&language=en-US&query=${hash}&page=1&include_adult=false`\n        )\n          .then((res) => res.json())\n          .then((res) => {\n            setMovies(res.results);\n          });\n      });\n  }, [hash]);\n\n  /** Changing the url changes the value of 'hash' to update the search */\n  window.addEventListener(\"hashchange\", () => {\n    setHash(window.location.hash.replace(/#/g, \"\"));\n  });\n\n  return (\n    <MovieStructure>\n      {movies.map((el) => (\n        <Movie\n          key={el.id}\n          id={el.id}\n          src={\n            el.poster_path\n              ? `${baseUrl}${posterSize}${el.poster_path}`\n              : noneImage\n          }\n          title={el.title}\n          rating={el.vote_average}\n          plot={el.overview}\n        />\n      ))}\n    </MovieStructure>\n  );\n}\n\nexport default Body;\n","/** Main imports */\nimport React from \"react\"\n/** My modules import */\nimport Header from \"./components/Header\"\nimport Body from \"./components/Body\"\n\n/** Main component that is responsible for containing the entire React.js application */\nfunction App(){\n  window.localStorage.setItem(\"movieLike\", \",\") // A variable is created in the localStorage of the browser that controls the heart icon of the movies\n\n  return(\n    <div id=\"root\">\n      <Header />\n      <Body />\n    </div>\n  )\n}\n\nexport default App","/** Main imports */\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n/** Styles import  */\nimport \"./asset/css/main.css\"\n\n/** ReactDOM, Rendering the App component */\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);"],"sourceRoot":""}